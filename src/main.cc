#include <iostream>
#include <vector>

#include "Util/terminal.hh"

int main( int argc, char** argv )
{
    using namespace Carrot::Terminal;
    using Carrot::Terminal::Color;
    using Carrot::Terminal::Style;
    using std::cout;
    
    Modifier banner({ WHITE_BACKGROUND, BLACK_TEXT });
    Modifier carrotStyle({ BOLD_ON, BLUE_BACKGROUND, YELLOW_TEXT });
    Modifier warn({ YELLOW_BACKGROUND, BLACK_TEXT });
    
    cout << banner("=====================================================") << "\n\n";
    cout << "\t\t " << carrotStyle("游볫 Carrot 2D 游볫") << "\n\n";
    cout << '\t' << warn(" Vers칚o de desenvolvimento v0.1 ") << "\n\n";
    cout << Modifier{BOLD_ON}() << "Responsabilidades do motor:" << Modifier{RESET}() << "\n\n";
    for ( const auto& item : std::vector<std::string>{
        "游린 L칩gica de atualiza칞칚o",
        "游린 Controle de janela e monitores",
        "游린 Desenho",
        "游린 Intera칞칚o com dispositivos de entrada",
        "游린 Serializa칞칚o",
        "游린 Sons",
        "游린 F칤sica"
    }) cout << item << '\n';
    cout << "\nLegenda - 游릭: Feito 游댰: Em andamento 游린: N칚o iniciado" << "\n\n";
    cout << banner("=====================================================") << "\n\n";

    return 0;
}
